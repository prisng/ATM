import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;

public class Bank {
	private String id;
	private HashSet<ATM> atms;
	private HashSet<BankAccount> accounts;	// Each customer's respective bank accounts within this bank
	private Map<BankAccount, HashSet<ATM>> accountToATMs;
	
	public Bank(String id) {
		this.id = id;
		this.accountToATMs = new HashMap<BankAccount, HashSet<ATM>>();
		this.accounts = new HashSet<BankAccount>();
	}
	
	public String getId() {
		return this.id;
	}
	
	public void addBankAccount(BankAccount account) {
		accounts.add(account);
	}
	
	public BankAccount validateAccount(String cardNumber) {
		BankAccount acc = null;
		for (BankAccount account : accounts) {
			if (account.getAssociatedCashCard().getCardNumber().toLowerCase().equals(cardNumber)) {
				return account;
			}
		}
		return acc;
	}
	
	// is this method only in ATM?
	// Either logs transaction with respective card, or gives error message
	public void withdraw(BankAccount account, int amount) {
		System.out.println(account.getBalance());
		// checkBalance();
		if (account.getBalance() >= amount) {
			account.setBalance(account.getBalance() - amount);
		}
		else {	// insufficient funds
			System.out.println("This amount exceeds the maximum amount you can withdraw per transaction. Please enter the amount or quit.");
		}
		System.out.println(account.getBalance());
	}
	
	// Checks whether or not there's sufficient funds in the bank account
	// return false if not, true if so
	public boolean checkBalance() {
		// accessor from bank account
		return true;
	}
	
	public boolean hasATM(ATM atm) {
		if (atms.contains(atm)) {
			return true;
		}
		return false;
	}
	
	// I probably don't need this method bc ATM already has-an (associated) bank
	/*
	// Adds an ATM to this bank
	public void addATM(ATM atm) {
		atms.add(atm);
	}
	*/
}